Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                              com.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                              com.o (malloc)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o) (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

__brkval            0x2               /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__flp               0x2               /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)

Discarded input sections

 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
 .text          0x0000000000000000        0x0 com.o
 .bss           0x0000000000000000        0x0 com.o
 .text          0x0000000000000000        0x0 spi.o
 .bss           0x0000000000000000        0x0 spi.o
 .text.digiPotInitWiper
                0x0000000000000000       0x18 spi.o
 .text.accelerometerReceive
                0x0000000000000000       0x46 spi.o
 .text.init_accel
                0x0000000000000000       0x18 spi.o
 .text          0x0000000000000000        0x0 radioctl.o
 .bss           0x0000000000000000        0x0 radioctl.o
 .text.activateFeatures
                0x0000000000000000       0x14 radioctl.o
 .text.getTX_FULL
                0x0000000000000000       0x1e radioctl.o
 .text          0x0000000000000000        0x0 i2c.o
 .bss           0x0000000000000000        0x0 i2c.o
 .text.ERROR1   0x0000000000000000        0x2 i2c.o
 .text.ERROR2   0x0000000000000000        0x2 i2c.o
 .text.initI2C  0x0000000000000000        0xe i2c.o
 .text.batteryICI2C
                0x0000000000000000       0x5e i2c.o
 .text.I2C_receive_batteryIC
                0x0000000000000000       0x92 i2c.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
LOAD com.o
LOAD spi.o
LOAD radioctl.o
LOAD i2c.o
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x6d8
 *(.vectors)
 .vectors       0x0000000000000000       0xac /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000000000000ac                . = ALIGN (0x2)
                0x00000000000000ac                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000ac        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000ac                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000ac                __ctors_start = .
 *(.ctors)
                0x00000000000000ac                __ctors_end = .
                0x00000000000000ac                __dtors_start = .
 *(.dtors)
                0x00000000000000ac                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000ac        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
                0x00000000000000ac                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000ac        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000b8       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x00000000000000b8                __do_copy_data
 .init4         0x00000000000000ce       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000000ce                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000de        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
 *(.init9)
 *(.text)
 .text          0x00000000000000e2        0x2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
                0x00000000000000e2                __vector_38
                0x00000000000000e2                __vector_22
                0x00000000000000e2                __vector_28
                0x00000000000000e2                __vector_1
                0x00000000000000e2                __vector_32
                0x00000000000000e2                __vector_34
                0x00000000000000e2                __vector_24
                0x00000000000000e2                __vector_12
                0x00000000000000e2                __bad_interrupt
                0x00000000000000e2                __vector_6
                0x00000000000000e2                __vector_31
                0x00000000000000e2                __vector_35
                0x00000000000000e2                __vector_39
                0x00000000000000e2                __vector_3
                0x00000000000000e2                __vector_23
                0x00000000000000e2                __vector_30
                0x00000000000000e2                __vector_25
                0x00000000000000e2                __vector_11
                0x00000000000000e2                __vector_13
                0x00000000000000e2                __vector_17
                0x00000000000000e2                __vector_19
                0x00000000000000e2                __vector_7
                0x00000000000000e2                __vector_41
                0x00000000000000e2                __vector_27
                0x00000000000000e2                __vector_5
                0x00000000000000e2                __vector_33
                0x00000000000000e2                __vector_37
                0x00000000000000e2                __vector_4
                0x00000000000000e2                __vector_9
                0x00000000000000e2                __vector_2
                0x00000000000000e2                __vector_21
                0x00000000000000e2                __vector_15
                0x00000000000000e2                __vector_36
                0x00000000000000e2                __vector_29
                0x00000000000000e2                __vector_40
                0x00000000000000e2                __vector_8
                0x00000000000000e2                __vector_26
                0x00000000000000e2                __vector_14
                0x00000000000000e2                __vector_10
                0x00000000000000e2                __vector_16
                0x00000000000000e2                __vector_18
                0x00000000000000e2                __vector_20
                0x00000000000000e2                __vector_42
                0x00000000000000e4                . = ALIGN (0x2)
 *(.text.*)
 .text.initUART
                0x00000000000000e4       0x20 com.o
                0x00000000000000e4                initUART
 .text.transmit_payload
                0x0000000000000104       0x80 com.o
                0x0000000000000104                transmit_payload
 .text.receive_payload
                0x0000000000000184       0x56 com.o
                0x0000000000000184                receive_payload
 .text.startup.main
                0x00000000000001da       0xaa com.o
                0x00000000000001da                main
 .text.SPI_masterInit
                0x0000000000000284        0xa spi.o
                0x0000000000000284                SPI_masterInit
 .text.SPI_masterReceive
                0x000000000000028e        0xe spi.o
                0x000000000000028e                SPI_masterReceive
 .text.SPI_masterTransmit
                0x000000000000029c        0xc spi.o
                0x000000000000029c                SPI_masterTransmit
 .text.openPort
                0x00000000000002a8        0x4 radioctl.o
                0x00000000000002a8                openPort
 .text.closePort
                0x00000000000002ac        0xe radioctl.o
                0x00000000000002ac                closePort
 .text.initRadioTX
                0x00000000000002ba        0xc radioctl.o
                0x00000000000002ba                initRadioTX
 .text.initRadioRX
                0x00000000000002c6        0xc radioctl.o
                0x00000000000002c6                initRadioRX
 .text.setRadioAddressWidth
                0x00000000000002d2       0x12 radioctl.o
                0x00000000000002d2                setRadioAddressWidth
 .text.setRadioFrequency
                0x00000000000002e4       0x12 radioctl.o
                0x00000000000002e4                setRadioFrequency
 .text.setRadioTXAddress
                0x00000000000002f6       0x2e radioctl.o
                0x00000000000002f6                setRadioTXAddress
 .text.setRadioRXAddress
                0x0000000000000324       0x2e radioctl.o
                0x0000000000000324                setRadioRXAddress
 .text.setRadioRXPayloadSize
                0x0000000000000352       0x26 radioctl.o
                0x0000000000000352                setRadioRXPayloadSize
 .text.setRadioTXPayload
                0x0000000000000378       0x3e radioctl.o
                0x0000000000000378                setRadioTXPayload
 .text.getRadioRXPayload
                0x00000000000003b6       0x3a radioctl.o
                0x00000000000003b6                getRadioRXPayload
 .text.getRadioStatus
                0x00000000000003f0       0x14 radioctl.o
                0x00000000000003f0                getRadioStatus
 .text.getRX_DR
                0x0000000000000404       0x20 radioctl.o
                0x0000000000000404                getRX_DR
 .text.getTX_DS
                0x0000000000000424       0x20 radioctl.o
                0x0000000000000424                getTX_DS
 .text.getMAX_RT
                0x0000000000000444       0x1e radioctl.o
                0x0000000000000444                getMAX_RT
 .text.clearMAX_RT
                0x0000000000000462        0xc radioctl.o
                0x0000000000000462                clearMAX_RT
 .text.clearTX_DS
                0x000000000000046e        0xc radioctl.o
                0x000000000000046e                clearTX_DS
 .text.clearRX_DR
                0x000000000000047a        0xc radioctl.o
                0x000000000000047a                clearRX_DR
 .text.avr-libc
                0x0000000000000486      0x24e /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                0x0000000000000486                malloc
                0x00000000000005b6                free
                0x00000000000006d4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000006d4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x00000000000006d4                exit
                0x00000000000006d4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000006d4        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000006d8                _etext = .

.data           0x0000000000800100        0x8 load address 0x00000000000006d8
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
 .data          0x0000000000800100        0x1 com.o
                0x0000000000800100                mode
 .data          0x0000000000800101        0x0 spi.o
 .data          0x0000000000800101        0x0 radioctl.o
 .data          0x0000000000800101        0x0 i2c.o
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800101        0x6 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                0x0000000000800101                __malloc_heap_end
                0x0000000000800103                __malloc_heap_start
                0x0000000000800105                __malloc_margin
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800108                . = ALIGN (0x2)
 *fill*         0x0000000000800107        0x1 
                0x0000000000800108                _edata = .
                0x0000000000800108                PROVIDE (__data_end, .)

.bss            0x0000000000800108        0x4
                0x0000000000800108                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800108        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                0x0000000000800108                __brkval
                0x000000000080010a                __flp
                0x000000000080010c                PROVIDE (__bss_end, .)
                0x00000000000006d8                __data_load_start = LOADADDR (.data)
                0x00000000000006e0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080010c        0x0
                0x000000000080010c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080010c                PROVIDE (__noinit_end, .)
                0x000000000080010c                _end = .
                0x000000000080010c                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0xfa8
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
 .stab          0x00000000000006cc      0x8dc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                                        0x8e8 (size before relaxing)

.stabstr        0x0000000000000000      0xd67
 *(.stabstr)
 .stabstr       0x0000000000000000      0xd67 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 com.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 spi.o
 .comment       0x0000000000000000       0x12 radioctl.o
 .comment       0x0000000000000000       0x12 i2c.o
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x178
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x38 com.o
 .debug_aranges
                0x0000000000000038       0x48 spi.o
 .debug_aranges
                0x0000000000000080       0xb8 radioctl.o
 .debug_aranges
                0x0000000000000138       0x40 i2c.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000     0x11ed
 *(.debug_info)
 .debug_info    0x0000000000000000      0x6e1 com.o
 .debug_info    0x00000000000006e1      0x220 spi.o
 .debug_info    0x0000000000000901      0x7c7 radioctl.o
 .debug_info    0x00000000000010c8      0x125 i2c.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x575
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x218 com.o
 .debug_abbrev  0x0000000000000218      0x111 spi.o
 .debug_abbrev  0x0000000000000329      0x179 radioctl.o
 .debug_abbrev  0x00000000000004a2       0xd3 i2c.o

.debug_line     0x0000000000000000      0x539
 *(.debug_line)
 .debug_line    0x0000000000000000      0x198 com.o
 .debug_line    0x0000000000000198       0xc2 spi.o
 .debug_line    0x000000000000025a      0x1f7 radioctl.o
 .debug_line    0x0000000000000451       0xe8 i2c.o

.debug_frame    0x0000000000000000      0x3b8
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x88 com.o
 .debug_frame   0x0000000000000088       0x88 spi.o
 .debug_frame   0x0000000000000110      0x244 radioctl.o
 .debug_frame   0x0000000000000354       0x64 i2c.o

.debug_str      0x0000000000000000      0x419
 *(.debug_str)
 .debug_str     0x0000000000000000      0x2cc com.o
                                        0x319 (size before relaxing)
 .debug_str     0x00000000000002cc       0x67 spi.o
                                        0x1b7 (size before relaxing)
 .debug_str     0x0000000000000333       0x8f radioctl.o
                                        0x304 (size before relaxing)
 .debug_str     0x00000000000003c2       0x57 i2c.o
                                        0x191 (size before relaxing)

.debug_loc      0x0000000000000000      0x952
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x1cd com.o
 .debug_loc     0x00000000000001cd       0xd2 spi.o
 .debug_loc     0x000000000000029f      0x63a radioctl.o
 .debug_loc     0x00000000000008d9       0x79 i2c.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000      0x138
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x28 com.o
 .debug_ranges  0x0000000000000028       0x38 spi.o
 .debug_ranges  0x0000000000000060       0xa8 radioctl.o
 .debug_ranges  0x0000000000000108       0x30 i2c.o

.debug_macro
 *(.debug_macro)
OUTPUT(com.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
ERROR1                                            i2c.o
ERROR2                                            i2c.o
I2C_receive_batteryIC                             i2c.o
SPI_masterInit                                    spi.o
                                                  com.o
SPI_masterReceive                                 spi.o
                                                  radioctl.o
SPI_masterTransmit                                spi.o
                                                  radioctl.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__brkval                                          /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__bss_end                                         /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__do_copy_data                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                                                  com.o
__flp                                             /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__heap_end                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__heap_start                                      /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__init                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__malloc_heap_end                                 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__malloc_heap_start                               /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__malloc_margin                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__stack                                           /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_1                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_10                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_11                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_12                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_13                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_14                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_15                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_16                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_17                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_18                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_19                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_2                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_20                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_21                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_22                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_23                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_24                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_25                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_26                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_27                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_28                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_29                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_3                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_30                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_31                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_32                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_33                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_34                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_35                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_36                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_37                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_38                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_39                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_4                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_40                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_41                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_42                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_5                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_6                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_7                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_8                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_9                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_default                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vectors                                         /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
_exit                                             /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
accelerometerReceive                              spi.o
activateFeatures                                  radioctl.o
batteryICI2C                                      i2c.o
clearMAX_RT                                       radioctl.o
                                                  com.o
clearRX_DR                                        radioctl.o
                                                  com.o
clearTX_DS                                        radioctl.o
                                                  com.o
closePort                                         radioctl.o
digiPotInitWiper                                  spi.o
exit                                              /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
free                                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
getMAX_RT                                         radioctl.o
                                                  com.o
getRX_DR                                          radioctl.o
                                                  com.o
getRadioRXPayload                                 radioctl.o
                                                  com.o
getRadioStatus                                    radioctl.o
                                                  com.o
getTX_DS                                          radioctl.o
                                                  com.o
getTX_FULL                                        radioctl.o
initI2C                                           i2c.o
initRadioRX                                       radioctl.o
                                                  com.o
initRadioTX                                       radioctl.o
                                                  com.o
initUART                                          com.o
init_accel                                        spi.o
main                                              com.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
malloc                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                                                  com.o
mode                                              com.o
openPort                                          radioctl.o
receive_payload                                   com.o
setRadioAddressWidth                              radioctl.o
                                                  com.o
setRadioFrequency                                 radioctl.o
                                                  com.o
setRadioRXAddress                                 radioctl.o
                                                  com.o
setRadioRXPayloadSize                             radioctl.o
                                                  com.o
setRadioTXAddress                                 radioctl.o
                                                  com.o
setRadioTXPayload                                 radioctl.o
                                                  com.o
transmit_payload                                  com.o

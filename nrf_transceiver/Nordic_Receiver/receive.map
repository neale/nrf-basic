Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                              receive.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                              receive.o (malloc)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o) (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

__brkval            0x2               /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__flp               0x2               /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)

Discarded input sections

 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
 .text          0x0000000000000000        0x0 receive.o
 .bss           0x0000000000000000        0x0 receive.o
 .text          0x0000000000000000        0x0 spi.o
 .bss           0x0000000000000000        0x0 spi.o
 .text.digiPotInitWiper
                0x0000000000000000       0x18 spi.o
 .text.accelerometerReceive
                0x0000000000000000       0x46 spi.o
 .text.init_accel
                0x0000000000000000       0x18 spi.o
 .text          0x0000000000000000        0x0 radioctl.o
 .bss           0x0000000000000000        0x0 radioctl.o
 .text.activateFeatures
                0x0000000000000000       0x14 radioctl.o
 .text.getTX_FULL
                0x0000000000000000       0x1e radioctl.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
LOAD receive.o
LOAD spi.o
LOAD radioctl.o
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x6f0
 *(.vectors)
 .vectors       0x0000000000000000       0xac /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000000000000ac                . = ALIGN (0x2)
                0x00000000000000ac                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000ac        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000ac                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000ac                __ctors_start = .
 *(.ctors)
                0x00000000000000ac                __ctors_end = .
                0x00000000000000ac                __dtors_start = .
 *(.dtors)
                0x00000000000000ac                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000ac        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
                0x00000000000000ac                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000ac        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000b8       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x00000000000000b8                __do_copy_data
 .init4         0x00000000000000ce       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000000ce                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000de        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
 *(.init9)
 *(.text)
 .text          0x00000000000000e2        0x2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
                0x00000000000000e2                __vector_38
                0x00000000000000e2                __vector_22
                0x00000000000000e2                __vector_28
                0x00000000000000e2                __vector_1
                0x00000000000000e2                __vector_32
                0x00000000000000e2                __vector_34
                0x00000000000000e2                __vector_24
                0x00000000000000e2                __vector_12
                0x00000000000000e2                __bad_interrupt
                0x00000000000000e2                __vector_6
                0x00000000000000e2                __vector_31
                0x00000000000000e2                __vector_35
                0x00000000000000e2                __vector_39
                0x00000000000000e2                __vector_3
                0x00000000000000e2                __vector_23
                0x00000000000000e2                __vector_30
                0x00000000000000e2                __vector_25
                0x00000000000000e2                __vector_11
                0x00000000000000e2                __vector_13
                0x00000000000000e2                __vector_17
                0x00000000000000e2                __vector_19
                0x00000000000000e2                __vector_7
                0x00000000000000e2                __vector_41
                0x00000000000000e2                __vector_27
                0x00000000000000e2                __vector_5
                0x00000000000000e2                __vector_33
                0x00000000000000e2                __vector_37
                0x00000000000000e2                __vector_4
                0x00000000000000e2                __vector_9
                0x00000000000000e2                __vector_2
                0x00000000000000e2                __vector_21
                0x00000000000000e2                __vector_15
                0x00000000000000e2                __vector_36
                0x00000000000000e2                __vector_29
                0x00000000000000e2                __vector_40
                0x00000000000000e2                __vector_8
                0x00000000000000e2                __vector_26
                0x00000000000000e2                __vector_14
                0x00000000000000e2                __vector_10
                0x00000000000000e2                __vector_16
                0x00000000000000e2                __vector_18
                0x00000000000000e2                __vector_20
                0x00000000000000e2                __vector_42
                0x00000000000000e4                . = ALIGN (0x2)
 *(.text.*)
 .text.initUART
                0x00000000000000e4       0x20 receive.o
                0x00000000000000e4                initUART
 .text.transmit_payload
                0x0000000000000104       0x80 receive.o
                0x0000000000000104                transmit_payload
 .text.receive_payload
                0x0000000000000184       0x5c receive.o
                0x0000000000000184                receive_payload
 .text.startup.main
                0x00000000000001e0       0xbc receive.o
                0x00000000000001e0                main
 .text.SPI_masterInit
                0x000000000000029c        0xa spi.o
                0x000000000000029c                SPI_masterInit
 .text.SPI_masterReceive
                0x00000000000002a6        0xe spi.o
                0x00000000000002a6                SPI_masterReceive
 .text.SPI_masterTransmit
                0x00000000000002b4        0xc spi.o
                0x00000000000002b4                SPI_masterTransmit
 .text.openPort
                0x00000000000002c0        0x4 radioctl.o
                0x00000000000002c0                openPort
 .text.closePort
                0x00000000000002c4        0xe radioctl.o
                0x00000000000002c4                closePort
 .text.initRadioTX
                0x00000000000002d2        0xc radioctl.o
                0x00000000000002d2                initRadioTX
 .text.initRadioRX
                0x00000000000002de        0xc radioctl.o
                0x00000000000002de                initRadioRX
 .text.setRadioAddressWidth
                0x00000000000002ea       0x12 radioctl.o
                0x00000000000002ea                setRadioAddressWidth
 .text.setRadioFrequency
                0x00000000000002fc       0x12 radioctl.o
                0x00000000000002fc                setRadioFrequency
 .text.setRadioTXAddress
                0x000000000000030e       0x2e radioctl.o
                0x000000000000030e                setRadioTXAddress
 .text.setRadioRXAddress
                0x000000000000033c       0x2e radioctl.o
                0x000000000000033c                setRadioRXAddress
 .text.setRadioRXPayloadSize
                0x000000000000036a       0x26 radioctl.o
                0x000000000000036a                setRadioRXPayloadSize
 .text.setRadioTXPayload
                0x0000000000000390       0x3e radioctl.o
                0x0000000000000390                setRadioTXPayload
 .text.getRadioRXPayload
                0x00000000000003ce       0x3a radioctl.o
                0x00000000000003ce                getRadioRXPayload
 .text.getRadioStatus
                0x0000000000000408       0x14 radioctl.o
                0x0000000000000408                getRadioStatus
 .text.getRX_DR
                0x000000000000041c       0x20 radioctl.o
                0x000000000000041c                getRX_DR
 .text.getTX_DS
                0x000000000000043c       0x20 radioctl.o
                0x000000000000043c                getTX_DS
 .text.getMAX_RT
                0x000000000000045c       0x1e radioctl.o
                0x000000000000045c                getMAX_RT
 .text.clearMAX_RT
                0x000000000000047a        0xc radioctl.o
                0x000000000000047a                clearMAX_RT
 .text.clearTX_DS
                0x0000000000000486        0xc radioctl.o
                0x0000000000000486                clearTX_DS
 .text.clearRX_DR
                0x0000000000000492        0xc radioctl.o
                0x0000000000000492                clearRX_DR
 .text.avr-libc
                0x000000000000049e      0x24e /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                0x000000000000049e                malloc
                0x00000000000005ce                free
                0x00000000000006ec                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000006ec        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x00000000000006ec                exit
                0x00000000000006ec                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000006ec        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000006f0                _etext = .

.data           0x0000000000800100        0x8 load address 0x00000000000006f0
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
 .data          0x0000000000800100        0x1 receive.o
                0x0000000000800100                mode
 .data          0x0000000000800101        0x0 spi.o
 .data          0x0000000000800101        0x0 radioctl.o
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800101        0x6 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                0x0000000000800101                __malloc_heap_end
                0x0000000000800103                __malloc_heap_start
                0x0000000000800105                __malloc_margin
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800108                . = ALIGN (0x2)
 *fill*         0x0000000000800107        0x1 
                0x0000000000800108                _edata = .
                0x0000000000800108                PROVIDE (__data_end, .)

.bss            0x0000000000800108        0x4
                0x0000000000800108                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800108        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                0x0000000000800108                __brkval
                0x000000000080010a                __flp
                0x000000000080010c                PROVIDE (__bss_end, .)
                0x00000000000006f0                __data_load_start = LOADADDR (.data)
                0x00000000000006f8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080010c        0x0
                0x000000000080010c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080010c                PROVIDE (__noinit_end, .)
                0x000000000080010c                _end = .
                0x000000000080010c                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0xfa8
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
 .stab          0x00000000000006cc      0x8dc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                                        0x8e8 (size before relaxing)

.stabstr        0x0000000000000000      0xd67
 *(.stabstr)
 .stabstr       0x0000000000000000      0xd67 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 receive.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 spi.o
 .comment       0x0000000000000000       0x12 radioctl.o
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x138
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x38 receive.o
 .debug_aranges
                0x0000000000000038       0x48 spi.o
 .debug_aranges
                0x0000000000000080       0xb8 radioctl.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000     0x10c8
 *(.debug_info)
 .debug_info    0x0000000000000000      0x6e1 receive.o
 .debug_info    0x00000000000006e1      0x220 spi.o
 .debug_info    0x0000000000000901      0x7c7 radioctl.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x4a2
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x218 receive.o
 .debug_abbrev  0x0000000000000218      0x111 spi.o
 .debug_abbrev  0x0000000000000329      0x179 radioctl.o

.debug_line     0x0000000000000000      0x461
 *(.debug_line)
 .debug_line    0x0000000000000000      0x1a5 receive.o
 .debug_line    0x00000000000001a5       0xc5 spi.o
 .debug_line    0x000000000000026a      0x1f7 radioctl.o

.debug_frame    0x0000000000000000      0x354
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x88 receive.o
 .debug_frame   0x0000000000000088       0x88 spi.o
 .debug_frame   0x0000000000000110      0x244 radioctl.o

.debug_str      0x0000000000000000      0x3b9
 *(.debug_str)
 .debug_str     0x0000000000000000      0x2c3 receive.o
                                        0x310 (size before relaxing)
 .debug_str     0x00000000000002c3       0x67 spi.o
                                        0x1aa (size before relaxing)
 .debug_str     0x000000000000032a       0x8f radioctl.o
                                        0x2f7 (size before relaxing)

.debug_loc      0x0000000000000000      0x8d9
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x1cd receive.o
 .debug_loc     0x00000000000001cd       0xd2 spi.o
 .debug_loc     0x000000000000029f      0x63a radioctl.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000      0x108
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x28 receive.o
 .debug_ranges  0x0000000000000028       0x38 spi.o
 .debug_ranges  0x0000000000000060       0xa8 radioctl.o

.debug_macro
 *(.debug_macro)
OUTPUT(receive.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
SPI_masterInit                                    spi.o
                                                  receive.o
SPI_masterReceive                                 spi.o
                                                  radioctl.o
SPI_masterTransmit                                spi.o
                                                  radioctl.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__brkval                                          /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__bss_end                                         /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__do_copy_data                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                                                  receive.o
__flp                                             /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__heap_end                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__heap_start                                      /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__init                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__malloc_heap_end                                 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__malloc_heap_start                               /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__malloc_margin                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__stack                                           /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_1                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_10                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_11                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_12                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_13                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_14                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_15                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_16                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_17                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_18                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_19                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_2                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_20                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_21                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_22                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_23                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_24                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_25                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_26                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_27                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_28                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_29                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_3                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_30                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_31                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_32                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_33                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_34                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_35                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_36                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_37                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_38                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_39                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_4                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_40                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_41                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_42                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_5                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_6                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_7                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_8                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_9                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vector_default                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
__vectors                                         /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
_exit                                             /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
accelerometerReceive                              spi.o
activateFeatures                                  radioctl.o
clearMAX_RT                                       radioctl.o
                                                  receive.o
clearRX_DR                                        radioctl.o
                                                  receive.o
clearTX_DS                                        radioctl.o
                                                  receive.o
closePort                                         radioctl.o
digiPotInitWiper                                  spi.o
exit                                              /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
free                                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
getMAX_RT                                         radioctl.o
                                                  receive.o
getRX_DR                                          radioctl.o
                                                  receive.o
getRadioRXPayload                                 radioctl.o
                                                  receive.o
getRadioStatus                                    radioctl.o
                                                  receive.o
getTX_DS                                          radioctl.o
                                                  receive.o
getTX_FULL                                        radioctl.o
initRadioRX                                       radioctl.o
                                                  receive.o
initRadioTX                                       radioctl.o
                                                  receive.o
initUART                                          receive.o
init_accel                                        spi.o
main                                              receive.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
malloc                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                                                  receive.o
mode                                              receive.o
openPort                                          radioctl.o
receive_payload                                   receive.o
setRadioAddressWidth                              radioctl.o
                                                  receive.o
setRadioFrequency                                 radioctl.o
                                                  receive.o
setRadioRXAddress                                 radioctl.o
                                                  receive.o
setRadioRXPayloadSize                             radioctl.o
                                                  receive.o
setRadioTXAddress                                 radioctl.o
                                                  receive.o
setRadioTXPayload                                 radioctl.o
                                                  receive.o
transmit_payload                                  receive.o
